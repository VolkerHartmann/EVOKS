version: "3.7"

x-app: &evoks
  build:
    context: "."
  volumes:
    - .:/code
  restart: "unless-stopped"

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
      POSTGRES_DB: dev
    volumes:
       - postgres:/data/postgres
    ports:
      - "${POSTGRES_PORT:-8005}:5432"
    networks:
      - postgres
    restart: unless-stopped
  
<<<<<<< HEAD
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/root/.pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped
=======
  # pgadmin:
  #   container_name: pgadmin_container_${INSTANCE_NAME:-defaultinstance}
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #   volumes:
  #      - pgadmin:/root/.pgadmin

  #   ports:
  #     - "${PGADMIN_PORT:-8306}:80"
  #   networks:
  #     - postgres
  #   restart: unless-stopped
>>>>>>> cde9113... removed pgadmin since it is not needed
  web:
    <<: *evoks
    # caution, don't change this port since it is the one used within the container
    # to change port, use the "ports:" section
    command: >
      sh -c "python ./evoks/manage.py migrate && 
             python ./evoks/manage.py runserver 0.0.0.0:8000"
    ports:
      - "${EVOKS_PORT:-8000}:8000"
    depends_on:
      - postgres
      - fuseki-dev
      - fuseki-live
    networks: 
      - postgres
      - fuseki-dev
      - fuseki-live
    volumes:
      - .:/code
      - ./skosmos-dev/config.ttl:/code/skosmos-dev/config.ttl
      - ./skosmos-live/config.ttl:/code/skosmos-live/config.ttl
      - ./fuseki-dev/backup:/code/fuseki-dev/backup
  tailwind:
    <<: *evoks
    command: "bash tailwind.sh"
    ports:
      - "8383:8383"
    networks: 
      - fuseki-dev
      - fuseki-live
  fuseki-dev:
    container_name: fuseki-dev
    image: secoresearch/fuseki
    hostname: fuseki-dev
    environment: 
      ADMIN_PASSWORD: 'fuseki_password'
      ENABLE_DATA_WRITE: 'True'
      ENABLE_UPDATE: 'True'
      ENABLE_UPLOAD: 'True'
    ports:
      - "${FUSEKI_DEV_PORT:-8003}:3030"
    volumes: 
      - ./fuseki-dev/data:/fuseki-base/databases
      - ./fuseki-dev/config:/fuseki-base/configuration
      - ./fuseki-dev/backup:/fuseki-base/backups
    networks:
      - fuseki-dev
  fuseki-live:
    container_name: fuseki-live
    image: secoresearch/fuseki
    hostname: fuseki-live
    environment: 
      ADMIN_PASSWORD: 'fuseki_password'
      ENABLE_DATA_WRITE: 'True'
      ENABLE_UPDATE: 'True'
      ENABLE_UPLOAD: 'True'
    ports:
      - "${FUSEKI_LIVE_PORT:-8004}:3030"
    volumes: 
      - ./fuseki-live/data:/fuseki-base/databases
      - ./fuseki-live/config:/fuseki-base/configuration
      - ./fuseki-live/backup:/fuseki-base/backups
    networks:
      - fuseki-live
  skosmos-dev:
    build:
      context: github.com/NatLibFi/Skosmos.git
      dockerfile: dockerfiles/Dockerfile.ubuntu
    ports: 
      - "${SKOSMOS_DEV_PORT:-8001}:80"
    hostname: skosmos-dev
    depends_on: 
      - fuseki-dev
    networks:
      - fuseki-dev
    volumes:
      - ./skosmos-dev/config.ttl:/var/www/html/config.ttl
  skosmos-live:
    build:
      context: github.com/NatLibFi/Skosmos.git
      dockerfile: dockerfiles/Dockerfile.ubuntu
    ports: 
      - "${SKOSMOS_LIVE_PORT:-8002}:80"
    hostname: skosmos-live
    depends_on: 
      - fuseki-live
    networks:
      - fuseki-live
    volumes:
      - ./skosmos-live/config.ttl:/var/www/html/config.ttl
networks:
  postgres:
    driver: bridge
  fuseki-dev:
    driver: bridge
  fuseki-live:
    driver: bridge
volumes:
    postgres:
    pgadmin:
    fuseki: